services:
  # API Gateway
  gateway:
    build: ./gateway
    ports:
      - "8080:8080"
    volumes:
      - ./gateway:/app
    environment:
      - PYTHONUNBUFFERED=1
    restart: always
    depends_on:
      - assessment-service
      - account-service
      - chatbot-service
      - monitoring-service
      - report-service
      - request-service
      - response-service
    networks:
      - app-network

  # Microservices
  assessment-service:
    build: ./service/assessment-service
    ports:
      - "8001:8001"
    volumes:
      - ./service/assessment-service:/app
    environment:
      - PYTHONUNBUFFERED=1
    restart: always
    networks:
      - app-network

  account-service:
    build: ./service/account-service
    ports:
      - "8002:8002"
    volumes:
      - ./service/account-service:/app
    environment:
      - PYTHONUNBUFFERED=1
      - DATABASE_URL=postgresql+asyncpg://user:password@localhost:5432/eripotter_db
      - DEFAULT_DATABASE_URL=postgresql+asyncpg://user:password@localhost:5432/eripotter_db
      - SECRET_KEY=your-super-secret-key-change-this-in-production
      - JWT_SECRET=your-super-secret-key-change-this-in-production
      - JWT_ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - PORT=8002
      - HOST=0.0.0.0
      - FRONTEND_ORIGIN=http://localhost:3000
      - GATEWAY_ORIGIN=http://localhost:8080
      - RAILWAY_ENVIRONMENT=false
      - RAILWAY=false
    restart: always
    networks:
      - app-network

  chatbot-service:
    build: ./service/chatbot-service
    ports:
      - "8003:8003"
    volumes:
      - ./service/chatbot-service:/app
    environment:
      - PYTHONUNBUFFERED=1
    restart: always
    networks:
      - app-network

  monitoring-service:
    build: ./service/monitoring-service
    ports:
      - "8004:8004"
    volumes:
      - ./service/monitoring-service:/app
    environment:
      - PYTHONUNBUFFERED=1
    restart: always
    networks:
      - app-network

  report-service:
    build: ./service/report-service
    ports:
      - "8005:8005"
    volumes:
      - ./service/report-service:/app
    environment:
      - PYTHONUNBUFFERED=1
    restart: always
    networks:
      - app-network

  request-service:
    build: ./service/request-service
    ports:
      - "8006:8006"
    volumes:
      - ./service/request-service:/app
    environment:
      - PYTHONUNBUFFERED=1
    restart: always
    networks:
      - app-network

  response-service:
    build: ./service/response-service
    ports:
      - "8007:8007"
    volumes:
      - ./service/response-service:/app
    environment:
      - PYTHONUNBUFFERED=1
    restart: always
    networks:
      - app-network

  # Frontend
  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
    restart: always
    networks:
      - app-network

  # Database & Cache
  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app-network
    restart: always

networks:
  app-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/16